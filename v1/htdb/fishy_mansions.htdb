#define	fishy->numFields	3
#define	fishy->field[1]	date
#define	fishy->field[2]	poster
#define	fishy->field[3]	mp4
 
#define	fishy[1]->date	2020-06-14
#define	fishy[1]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200614/20200614_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[1]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200614/20200614_PatFish_FishyMansions.mp4

#define	fishy[2]->date	2020-07-12
#define	fishy[2]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200712/20200712_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[2]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200712/20200712_PatFish_FishyMansions.mp4

#define	fishy[3]->date	2020-09-27
#define	fishy[3]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200927/20200927_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[3]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20200927/20200927_PatFish_FishyMansions.mp4

#define	fishy[4]->date	2020-12-06
#define	fishy[4]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20201206/20201206_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[4]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20201206/20201206_PatFish_FishyMansions.mp4

#define	fishy[5]->date	2020-12-31
#define	fishy[5]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20201231/20201231_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[5]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20201231/20201231_PatFish_FishyMansions.mp4

#define	fishy[6]->date	2021-02-28
#define	fishy[6]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210228/20210228_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[6]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210228/20210228_PatFish_FishyMansions.mp4

#define	fishy[7]->date	2021-04-18
#define	fishy[7]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210418/20210418_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[7]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210418/20210418_PatFish_FishyMansions.mp4

#define	fishy[8]->date	2021-06-06
#define	fishy[8]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210606/20210606_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[8]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210606/20210606_PatFish_FishyMansions.mp4

#define	fishy[9]->date	2021-07-25
#define	fishy[9]->poster	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210725/20210725_PatFish_FishyMansions_thumbnail.jpg
#define	fishy[9]->mp4	https://s3.amazonaws.com/assets.jazzbutcher.com/video/gigs/20210725/20210725_PatFish_FishyMansions.mp4

#define	fishy->numResults	9

#define	index.html
<head>
	<link href="//vjs.zencdn.net/7.10.2/video-js.min.css" rel="stylesheet">
	<script src="//vjs.zencdn.net/7.10.2/video.min.js"></script>
</head>
${mkHeader(title=The Fishy Mansions Sessions: 2020-2021)}
${tag_beg}
The Fishy Mansions Sessions: 2020-2021
${tag_end}

<style>

.carousel-wrapper {
  overflow: hidden;
  width: 100%;
}

.carousel-wrapper * {
  box-sizing: border-box;
}

.carousel {
  transform-style: preserve-3d;
}

.carousel__photo {
  opacity: 0;
  position: absolute;
  top:0;
  left: -.5em;
  width: 100%;
  margin: auto;
  padding: 1rem 4rem;
  z-index: 100;
  transition: transform .5s, opacity .5s, z-index .5s;
}

.carousel__photo.initial,
.carousel__photo.active {
  opacity: 1;
  position: relative;
  z-index: 900;
}

.carousel__photo.prev,
.carousel__photo.next {
  z-index: 800;
}
.carousel__photo.prev {
  transform: translateX(-100%); /* Move 'prev' item to the left */
}
.carousel__photo.next {
  transform: translateX(100%); /* Move 'next' item to the right */
}

.carousel__button--prev,
.carousel__button--next {
  position: absolute;
  top: 230px;
  width: 3rem;
  height: 3rem;
  background-color: #fff8f8;
  transform: translateY(-50%);
  border-radius: 50%;
  cursor: pointer; 
  z-index: 1001; /* Sit on top of everything */
  border: 1px solid black;
}
.carousel__button--prev {
  left:100;
}
.carousel__button--next {
  right:0;
}
.carousel__button--prev::after,
.carousel__button--next::after {
  content: " ";
  position: absolute;
  width: 10px;
  height: 10px;
  top: 50%;
  left: 54%;
  border-right: 2px solid black;
  border-bottom: 2px solid black;
  transform: translate(-50%, -50%) rotate(135deg);
}
.carousel__button--next::after {
  left: 47%;
  transform: translate(-50%, -50%) rotate(-45deg);
}

.card {
	float: left;
}

</style>

<blockquote>
During the COVID era, Pat streamed 9 from-home performances.
<br/><br/>
We were able to liberate these shows from <strike>Face***k</strike> Meta.
<br/><br/>
Enjoy
</blockquote>

<div class="carousel-wrapper" style="border: 1px solid; border-radius: 5px; border-color: #999; padding-bottom: 20px;">
  <div class="carousel">
#live	while (i = fishy[*]->date)
<div class="carousel__photo">
<div class="card">
<center>
#live	if (getval(fishy[${i}]->mp4))
	<video
		id="my-player"
		class="video-js"
		width="250"
		height="443"
		controls
		preload="none"
		poster="${fishy[${i}]->poster}"
		data-setup='{}'>
		<source src="${fishy[${i}]->mp4}" type='video/mp4' />
	  <p class="vjs-no-js">
		To view this video please enable JavaScript, and consider upgrading to a
		web browser that
		<a href="https://videojs.com/html5-video-support/" target="_blank">
		  supports HTML5 video
		</a>
	  </p>
	</video>
#live	else
	<h3>This video is private on FB, so I am unable to mirror it!</h3>
#live	endif
</center>
</div>
<div class="card" style="padding-left: 10px;">
	<h2>Fishy Mansions #${i}</h2>
#live	if ((sql(tunes:select comment, datetime, song, author from gigsong where datetime like '${fishy[${i}]->date}%%')) && (getint(tunes->numResults) > 0))
	<b>${linkInternal(/gigs/${ts2URI(${tunes[${j}]->datetime})}, ${fishy[${i}]->date})}</b>
<ol>
#live	while (j = tunes[*]->song)
#live	if (getval(tunes[${j}]->song) != Entire)
	<li>
		${linkAudio(title=${tunes[${j}]->song}, author=${tunes[${j}]->author}, comment=${tunes[${j}]->comment})}
	</li>
#live	endif
#live	endwhile
</ol>
#live	else
	<b>${fishy[${i}]->date}</b>
#live	endif
</div>
	</div>
#live	endwhile
    <div class="carousel__button--next"></div>
    <div class="carousel__button--prev"></div>
</div>
</div>

<script>
!(function(d){
  var itemClassName = "carousel__photo";
    items = d.getElementsByClassName(itemClassName),
    totalItems = items.length,
    slide = 0,
    moving = true;
// Set classes
function setInitialClasses() {
  // Targets the previous, current, and next items
  // This assumes there are at least three items.
  items[totalItems - 1].classList.add("prev");
  items[0].classList.add("active");
  items[1].classList.add("next");
}
// Set event listeners
function setEventListeners() {
  var next = d.getElementsByClassName('carousel__button--next')[0],
      prev = d.getElementsByClassName('carousel__button--prev')[0];
  next.addEventListener('click', moveNext);
  prev.addEventListener('click', movePrev);
}
// Next navigation handler
function moveNext() {
  // Check if moving
  if (!moving) {
    // If it's the last slide, reset to 0, else +1
    if (slide === (totalItems - 1)) {
      slide = 0;
    } else {
      slide++;
    }
    // Move carousel to updated slide
    moveCarouselTo(slide);
  }
}
// Previous navigation handler
function movePrev() {
  // Check if moving
  if (!moving) {
    // If it's the first slide, set as the last slide, else -1
    if (slide === 0) {
      slide = (totalItems - 1);
    } else {
      slide--;
    }
          
    // Move carousel to updated slide
    moveCarouselTo(slide);
  }
}

function disableInteraction() {
  // Set 'moving' to true for the same duration as our transition.
  // (0.5s = 500ms)
  
  moving = true;
  // setTimeout runs its function once after the given time
  setTimeout(function(){
    moving = false
  }, 500);
}

function moveCarouselTo(slide) {
  // Check if carousel is moving, if not, allow interaction
  if(!moving) {
    // temporarily disable interactivity
    disableInteraction();
    // Update the "old" adjacent slides with "new" ones
    var newPrevious = slide - 1,
        newNext = slide + 1,
        oldPrevious = slide - 2,
        oldNext = slide + 2;
    // Test if carousel has more than three items
    if ((totalItems - 1) > 3) {
      // Checks and updates if the new slides are out of bounds
      if (newPrevious <= 0) {
        oldPrevious = (totalItems - 1);
      } else if (newNext >= (totalItems - 1)){
        oldNext = 0;
      }
      // Checks and updates if slide is at the beginning/end
      if (slide === 0) {
        newPrevious = (totalItems - 1);
        oldPrevious = (totalItems - 2);
        oldNext = (slide + 1);
      } else if (slide === (totalItems -1)) {
        newPrevious = (slide - 1);
        newNext = 0;
        oldNext = 1;
      }
      // Now we've worked out where we are and where we're going, 
      // by adding/removing classes we'll trigger the transitions.
      // Reset old next/prev elements to default classes
      items[oldPrevious].className = itemClassName;
      items[oldNext].className = itemClassName;
      // Add new classes
      items[newPrevious].className = itemClassName + " prev";
      items[slide].className = itemClassName + " active";
      items[newNext].className = itemClassName + " next";
    }
  }
}


function initCarousel() {
  setInitialClasses();
  setEventListeners();
  // Set moving to false so that the carousel becomes interactive
  moving = false;
}

// make it rain
initCarousel();
}(document));
</script>

<br/>
${jbc_footer}

#define	data.json
#live if (getval(page) = data.json)
${objectToJSON(obj=fishy)}
#live	endif
